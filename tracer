import tkinter as tk
import numpy as np
import matplotlib
matplotlib.use('TkAgg')
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure
from tkinter import *



#Press 'Generate Plot' button-> Generator()
def Generator():
    x= np.linspace(0,10,100)
    y= np.zeros(100)
    
    #left column radiobutton function(Original y)
    if(functionS.get() == '1'):#Unit ramp
        for i in range(50,100):
            y[i] = x[i]-5
    elif (functionS.get() == '2'):#Square
        y=x**2
    elif (functionS.get() == '3'):#sine
        y=np.sin(x)
    elif (functionS.get() == '4'):#tangent
        y=np.tan(x)    
    
    #Right column radiobutton function(Limitaion to y)
    if(limit.get() == '2'):
        for i in range(100):
            if (y[i] > 0.5):
                y[i] = 0.5
            if (y[i] < -0.5):
                y[i] = -0.5
    elif(limit.get() == '3'):
        for i in range(100):
            if (y[i] < 0):
                y[i] = -y[i]
    elif(limit.get() == '4'):
        for i in range(1,100):
            y[i] /= x[i]
        y[0]=y[1]
    elif(limit.get() == '5'):
        for i in range(100):
            y[i] *= x[i]
    
    #Middle column radiobutton function (Numerical method)
    if(methodS.get()=='2'):#forward difference = y'
        yh_slope = np.zeros(100)
        for i in range(99):
            yh_slope[i] = (y[i+1]-y[i]) / (x[i+1]-x[i])
        yh_slope[99] = yh_slope[98]
        PLOT.add_subplot(111).plot(x,yh_slope)
        
    if(methodS.get()=='3'):#second differential = y''
        yh_sec = np.zeros(100)
        yh_sec[0]=0
        for i in range(98):
            yh_sec[i] = (y[i]-2*y[i+1]+y[i+2])/(x[i+1]-x[i])**2
        yh_sec[99] = yh_sec[98]
        PLOT.add_subplot(111).plot(x,yh_sec)
        
    if(methodS.get()=='4'):#Riemann integral = Sydx
        yh_Riemann = np.zeros(100)
        temp = 0
        for i in range(99):
            temp += (y[i]+y[i+1])/2 * (x[i+1]-x[i])
            yh_Riemann[i] = temp
        yh_Riemann[99]=yh_Riemann[98]
        PLOT.add_subplot(111).plot(x,yh_Riemann)
            
    PLOT.add_subplot(111).plot(x,y)
    canvas = FigureCanvasTkAgg(PLOT, master=win) 
    canvas.draw()
    canvas.get_tk_widget().grid(row=1,column=1,padx=20,pady=20)
    
def Clear():
    PLOT.clear()
    x= np.linspace(0,10,100)
    y= np.zeros(100)
    PLOT.add_subplot(111).plot
    canvas = FigureCanvasTkAgg(PLOT, master=win) 
    canvas.draw()
    canvas.get_tk_widget().grid(row=1,column=1,padx=20,pady=20)
    
    
    
   win = tk.Tk()
win.title('myGUI')
win.geometry('800x800')

label = tk.Label(win,text='取值法測試器',font=('Arial',16))
label.grid(row=0,column=1,padx=20,pady=20)


PLOT = Figure(figsize=(5,4), dpi=100)
PLOT.add_subplot(111)
canvas = FigureCanvasTkAgg(PLOT, master=win)  # A tk.DrawingArea.
canvas.draw()
canvas.get_tk_widget().grid(row=1,column=1,padx=10,pady=10)

#pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)

#selecting area
Function_name = tk.Label(win,text='函數',font=('Arial',14))
Function_name.grid(row=2,column=0,padx=20,pady=20)
Tracer_name = tk.Label(win,text='取值法',font=('Arial',14))
Tracer_name.grid(row=2,column=1,padx=20,pady=20)
Limit_name = tk.Label(win,text='y值限制',font=('Arial',14))
Limit_name.grid(row=2,column=2,padx=20,pady=20)

functionS = tk.StringVar()
functionS.set(1)

F0 = tk.Radiobutton(win, text='Unit ramp',var=functionS,value=1,font=('Arial',14))
F0.grid(row=6,column=0)
F1 = tk.Radiobutton(win, text='x^2',var=functionS,value=2,font=('Arial',14))
F1.grid(row=7,column=0)
F2 = tk.Radiobutton(win, text='sin(x)',var=functionS,value=3,font=('Arial',14))
F2.grid(row=8,column=0)
F2 = tk.Radiobutton(win, text='tanx',var=functionS,value=4,font=('Arial',14))
F2.grid(row=9,column=0)


methodS = tk.StringVar()
methodS.set(1)
chx0 = tk.Radiobutton(win, text='none',var=methodS,value=1,font=('Arial',14))
chx0.grid(row=6,column=1)
chx1 = tk.Radiobutton(win, text='y,forward_diff',var=methodS,value=2,font=('Arial',14))
chx1.grid(row=7,column=1)
chx2 = tk.Radiobutton(win, text='y,second_diff',var=methodS,value=3,font=('Arial',14))
chx2.grid(row=8,column=1)
chx3 = tk.Radiobutton(win, text='Riemann integral',var=methodS,value=4,font=('Arial',14))
chx3.grid(row=9,column=1)


limit = tk.StringVar()
limit.set(1)

L1 = tk.Radiobutton(win, text='no limitation',var=limit,value=1,font=('Arial',14))
L1.grid(row=6,column=2)
L2 = tk.Radiobutton(win, text='-0.5<y<0.5',var=limit,value=2,font=('Arial',14))
L2.grid(row=7,column=2)
L3 = tk.Radiobutton(win, text='|y|',var=limit,value=3,font=('Arial',14))
L3.grid(row=8,column=2)
L3 = tk.Radiobutton(win, text='y/x',var=limit,value=4,font=('Arial',14))
L3.grid(row=9,column=2)
L4 = tk.Radiobutton(win, text='yx',var=limit,value=5,font=('Arial',14))
L4.grid(row=10,column=2)

GO = tk.Button(win,text='Generate Plot',font=('Arial',14),command=Generator)
GO.grid(row=10,column=0)
Clear = tk.Button(win,text='Clear All',font=('Arial',14),command=Clear)
Clear.grid(row=10,column=1)

win.mainloop()
